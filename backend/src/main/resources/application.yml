server:
  port: 5000

spring:
  application:
    name: hayoung-place
  config:
    import: optional:file:backend/.env.local[.properties]

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      database: ${REDIS_DATABASE}
    mongodb:
      uri: ${MONGO_URI}

  security:
    oauth2:
      client:
        registration:
          google:
            provider: google
            client-name: Google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_URL:http://localhost:5000/login/oauth2/code/google}
            scope:
              - email
              - profile
            authorization-grant-type: authorization_code

springdoc:
  swagger-ui:
    servers:
      - url: ${SWAGGER_SERVER_PROD}
        description: Production server
      - url: ${SWAGGER_SERVER_LOCAL}
        description: Local server
  api-docs:
    path: /api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /api/**

swagger:
  servers:
    local: ${SWAGGER_SERVER_LOCAL}
    prod: ${SWAGGER_SERVER_PROD}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

jwt:
  secret: ${JWT_SECRET}
  access-token-expired: ${JWT_ACCESS_TOKEN_EXPIRED}
  refresh-token-expired: ${JWT_REFRESH_TOKEN_EXPIRED}

app:
  frontend-url: ${FRONTEND_URL}

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.data.mongodb: DEBUG
    org.springframework.security: DEBUG
    com.millo.hayoungplace: DEBUG
